Index: main.cpp
===================================================================
--- main.cpp	(revision 102)
+++ main.cpp	(working copy)
@@ -23,8 +23,8 @@
 {
 
 
-    std::string filename = "c:\\Documents and Settings\\mpa\\Dokumenty\\lsystem\\ls\\loadingTest06.ls";
-    std::string cfg = "c:\\Documents and Settings\\mpa\\Dokumenty\\lsystem\\config01.cfg";
+    std::string filename = "c:\\Documents and Settings\\mpa\\Dokumenty\\lsystem\\ls\\includeTestMain.ls";
+    std::string cfg = "c:\\Documents and Settings\\mpa\\Dokumenty\\lsystem\\ls…config01.cfg";
 
  /*   FunctionParser f;
     f.Parse("x+2", "x", false);
@@ -34,9 +34,9 @@
     double d = f.Eval(p);
 
     cout << d << endl;*/
-
- /*   options_description config_file_options;
-    variables_map vm;
+/*
+    options_description config_file_options;
+    variables_map vm, vm2;
     std::ifstream ifs(cfg.c_str());
     config_file_options.add_options()
             ("vec1",value<double>())
@@ -49,7 +49,29 @@
     if(stream)
     {
         store(parse_config_file(stream, config_file_options), vm);
+        notify(vm);
     }
+
+
+    std::stringstream stream2;
+    stream2 << "vec1=1.0" << endl;
+    //stream2 << "vec2=1.0" << endl;
+
+    if(stream2)
+    {
+        store(parse_config_file(stream2, config_file_options), vm2);
+        notify(vm2);
+
+        //variable_value val = vm2.begin()->second;
+        //vm[vm2.begin()->first] = val;
+
+        if(vm.count(vm2.begin()->first))
+        {
+            vm.erase(vm2.begin()->first);
+            vm.insert( *vm2.begin() );
+        }
+    }
+
 //    config_file_options.add_options()("vec1", value<double>()->default_value(3.0));
 
     if (vm.count("vec1"))
@@ -61,8 +83,8 @@
     {
         cout << "vec2: "
              << vm["vec2"].as< double >() << "\n";
-    }*/
-
+    }
+*/
     AbstractGenerator * generator;
 
     try
@@ -75,10 +97,7 @@
             generator->nextIteration();
         }
 
-        /*if (Configuration::get()->getProperty( "TEST01", "texture" ) != NULL )
-        {
-            cout << Configuration::get()->getProperty( "TEST01", "texture" )->as<string>() << endl;
-        }*/
+
     }
     catch( LSystemException &ex)
     {
